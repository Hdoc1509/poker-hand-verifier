var pokerHandVerifier=(function(){var m=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols;var $=Object.prototype.hasOwnProperty,Q=Object.prototype.propertyIsEnumerable;var x=(r,t,e)=>t in r?m(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,S=(r,t)=>{for(var e in t||(t={}))$.call(t,e)&&x(r,e,t[e]);if(b)for(var e of b(t))Q.call(t,e)&&x(r,e,t[e]);return r};var _=(r,t)=>{for(var e in t)m(r,e,{get:t[e],enumerable:!0})},V=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of P(t))!$.call(r,i)&&i!==e&&m(r,i,{get:()=>t[i],enumerable:!(n=R(t,i))||n.enumerable});return r};var J=r=>V(m({},"__esModule",{value:!0}),r);var W={};_(W,{verificateHand:function(){return X}});var z=/^(H|S|C|D){1}$/,g=/^(A|[2-9]|10|J|Q|K){1}$/;var L=function(r){if((r==null?void 0:r.number)===void 0||(r==null?void 0:r.suit)===void 0)return!1;let{number:t,suit:e}=r;return!(typeof t!="string"||typeof e!="string"||t.match(g)===null||e.match(z)===null)},D=function(r){return r.findIndex(function(t){return!L(t)})};var N=function(r){let t=r.map(function({number:i,suit:a}){return`${i}${a}`}),n=Array.from(new Set(t)).filter(function(i){var f;let a=new RegExp(i,"g");return((f=t.join("").match(a))==null?void 0:f.length)>=2});if(n.length>0)return n[0]};var u=Object.freeze({NotArray:"Expected an Array as argument.",QuantityCards:function(r,{minimum:t=2}={}){return`Expected an Array of ${t===5?"5 cards":`minimum ${t} and maximum 5 cards`}. Received ${r} instead.`},InvalidCard:function(r){return`All cards must have "number" and "suit" properties values correctly. Found invalid card at index ${r}.`},RepeatedCard:function(r){return`Array can not have repeated cards. Found repeated card: ${r}.`}}),p=function(r=[],{minimum:t=2}={}){if(!Array.isArray(r))return{ok:!1,error:u.NotArray};if(r.length<t||r.length>5)return{ok:!1,error:u.QuantityCards(r.length,{minimum:t})};let e=D(r);if(e!==-1)return{ok:!1,error:u.InvalidCard(e)};let n=N(r);return n?{ok:!1,error:u.RepeatedCard(n)}:{ok:!0}},y=function(r,t){let e=r.length;return e<t?{ok:!1,error:u.QuantityCards(e,{minimum:t})}:{ok:!0}};var s=function(r){let t=y(r,2);if(!t.ok)throw new Error(t.error);return new Set(r.map(function({number:n}){return n})).size===r.length},d=function(r){let t=y(r,2);if(!t.ok)throw new Error(t.error);return new Set(r.map(function({suit:n}){return n})).size===1},o=function(r=[],t=null){let e=p(r,{minimum:5});if(!e.ok)throw new Error(`Invalid Array of cards. ${e.error}`);if(typeof t!="string")throw new TypeError('Argument "numberToCheckMatches" must be an String');if(t.match(g)===null)throw new Error('Argument "numberToCheckMatches" is not a valid number');return{matches:r.filter(function({number:n}){return n===t}),notMatches:r.filter(function({number:n}){return n!==t})}};var j=function(r,t){let{matches:e,notMatches:n}=o(r,t);return e.length===2&&s(n)},v=function(r){var t;return(t=r.find(function({number:e}){return j(r,e)}))==null?void 0:t.number},l=function(r){let t=r.filter(function({number:e}){return o(r,e).matches.length===2}).map(function({number:e}){return e});return new Set(t)};var w=function(r){let t=l(r);return t.size===2?Array.from(t):void 0};var q=function(r,t){let{matches:e,notMatches:n}=o(r,t);return e.length===3&&s(n)},O=function(r){var t;return(t=r.find(function({number:e}){return q(r,e)}))==null?void 0:t.number},I=function(r){let t=r.filter(function({number:e}){return o(r,e).matches.length===3}).map(function({number:e}){return e});return new Set(t)};var K=Object.freeze({"A-5":/^A|[2-5]$/,"2-6":/^[2-6]$/,"3-7":/^[3-7]$/,"4-8":/^[4-8]$/,"5-9":/^[5-9]$/,"6-10":/^[6-9]|10$/,"7-J":/^[7-9]|10|J$/,"8-Q":/^8|9|10|J|Q$/,"9-K":/^9|10|J|Q|K$/,"10-A":/^10|J|Q|K|A$/}),B=function(r,t){return r.every(function({number:e}){return e.match(K[t])})&&s(r)},F=function(r){let t=Object.keys(K).find(function(a){return B(r,a)});if(t===void 0)return;let e=t.replace("-"," - "),n=d(r),[{suit:i}]=r;return t==="10-A"?{type:n?"royal-flush":"straight",description:n?`Royal Flush (${i})`:`Straight: ${e}`}:{type:n?"straight-flush":"straight",description:`Straight${n?` Flush (${i})`:""}: ${e}`}};var E=function(r){return d(r)};var T=function(r){let[t]=Array.from(l(r)),[e]=Array.from(I(r));if(!(t===void 0||e===void 0))return{pair:t,threeOfKind:e}};var G=function(r,t){let{matches:e}=o(r,t);return e.length===4},k=function(r){var t;return(t=r.find(function({number:e}){return G(r,e)}))==null?void 0:t.number};var H=function(r){let{matches:t}=o(r,"A");return t.length===1&&s(r)&&!d(r)};var M=function(r){return r.map(function({number:t,suit:e}){return`${t}${e}`})};var X=function(r){let t=p(r,{minimum:5});if(!t.ok)throw new Error(t.error);let e=M(r);if(H(r))return{cards:e,description:"High Card",type:"high-card"};let n=v(r);if(n!==void 0)return{cards:e,description:`Pair (${n})`,type:"pair"};let i=w(r);if(i!==void 0){let[c,h]=i;return{cards:e,description:`Two Pair (${c} & ${h})`,type:"two-pair"}}let a=O(r);if(a!==void 0)return{cards:e,description:`Three of a Kind (${a})`,type:"three-of-kind"};let f=F(r);if(f!==void 0)return S({cards:e},f);if(E(r))return{cards:e,description:`Flush (${r[0].suit})`,type:"flush"};let C=T(r);if(C!==void 0){let{pair:c,threeOfKind:h}=C;return{cards:e,description:`Full House (Pair: ${c} & Three of Kind: ${h})`,type:"full-house"}}let A=k(r);return A!==void 0?{cards:e,description:`Four of a Kind (${A})`,type:"four-of-kind"}:{cards:e,description:"Nothing",type:"nothing"}};return J(W);})();
